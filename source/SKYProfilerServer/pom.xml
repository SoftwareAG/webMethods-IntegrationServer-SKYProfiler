<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.softwareag.skyprofiler</groupId>
	<artifactId>webmethods-skyprofiler</artifactId>
	<version>1.0.1</version>
	<packaging>jar</packaging>

	<name>SKY Profiler</name>
	<description>SKY Profiler Application Server</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
		<spring-kafka.version>1.1.1.RELEASE</spring-kafka.version>
        <docker.images.prefix>lanimall</docker.images.prefix>
        <docker.images.repo>docker.io</docker.images.repo>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-kafka</artifactId>
			<version>2.0.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_2.10</artifactId>
			<version>0.10.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
		</dependency>
	</dependencies>
	<repositories>
	    <repository>
	        <id>spring-snapshots</id>
	        <name>Spring Snapshots</name>
	        <url>https://repo.spring.io/libs-snapshot</url>
	        <snapshots>
	            <enabled>true</enabled>
	        </snapshots>
	    </repository>
	</repositories>

	<build>
        <plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>copy-skyprofiler-runtime</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy file="${project.basedir}/../../dist/SKYProfiler-${project.version}.zip" tofile="${project.build.directory}/classes/static/resources/SKYProfilerRuntime.zip"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.14</version>
                <configuration>
                    <imageName>${docker.images.prefix}/${project.artifactId}</imageName>
                    <newName>${docker.images.repo}/${docker.images.prefix}/${project.artifactId}</newName>
                    <baseImage>openjdk:8-jdk-alpine</baseImage>
                    <maintainer>fabien.sanglier@softwareag.com</maintainer>
                    <env>
                        <JAVA_OPTS>""</JAVA_OPTS>
                        <ZOOKEEPER_HOST>localhost</ZOOKEEPER_HOST>
                        <MONGODB_HOST>localhost</MONGODB_HOST>
                    </env>
                    <exposes>
                        <expose>8080</expose>
                    </exposes>
                    <entryPoint>["sh", "-c", "java $JAVA_OPTS \
                        -Dkafka.zookeeper.connect=$ZOOKEEPER_HOST -Dspring.data.mongodb.host=$MONGODB_HOST \
                        -Djava.security.egd=file:/dev/./urandom \
                        -jar /${project.build.finalName}.jar"]</entryPoint>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                    <forceTags>true</forceTags>
                    <serverId>docker-hub</serverId>
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                        <imageTag>latest</imageTag>
                    </imageTags>
                </configuration>
                <executions>
                    <execution>
                        <id>build-image</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>tag-image-version</id>
                        <goals>
                            <goal>tag</goal>
                        </goals>
                        <configuration>
                            <image>${docker.images.prefix}/${project.artifactId}:${project.version}</image>
                            <newName>${docker.images.repo}/${docker.images.prefix}/${project.artifactId}:${project.version}</newName>
                            <serverId>docker-hub</serverId>
                            <pushImage>true</pushImage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>tag-image-latest</id>
                        <goals>
                            <goal>tag</goal>
                        </goals>
                        <configuration>
                            <image>${docker.images.prefix}/${project.artifactId}:${project.version}</image>
                            <newName>${docker.images.repo}/${docker.images.prefix}/${project.artifactId}:latest</newName>
                            <serverId>docker-hub</serverId>
                            <pushImage>true</pushImage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>
</project>
